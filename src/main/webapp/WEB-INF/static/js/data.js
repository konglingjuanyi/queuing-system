var devData = {
	"代码能力": {
		"考核点": "类C语言/脚本类/网络编程/多线程编程/数据库编程等",
		"打分标准": "1.仅懂皮毛，有一些概念<br \/>2.有一些编程经验，但是理解较浅<br \/>3.有比较全面的理解，可以独立、正确完成大多数编程作业<br \/>4.有深入理解，能够融会贯通，完成复杂的编程作业<br \/>5.领域专家级人才，例如对于语言发展，语言设计有深入探索，有设计新语言的能力<br \/>P.S.代码的风格可以作为一个加分项考虑",
		"常用问题": "C和C++的内存分布方式？如何回收？<br \/>模拟内存溢出（多种方式）<br \/>什么是MVC？分层的目的？具体应用场景？<br \/>分别用实例体现面向对象的特性？<br \/>如何进行垃圾回收？（C++、Java，什么会被认为是垃圾？）<br \/>Java中的泛型和反射**给其他人代码找错、现场改写代码、用好笔试题",
		"单项最低标准": 3
	},
	"数据结构和算法": {
		"考核点": "对常用算法、数据结构的掌握程度，包括算法的原理和应用",
		"打分标准": "1.皮毛，有一些概念<br \/>2.对一般的数据结构和算法能够理解和正确写出（如链表，字符串，排序等）<br \/>3.对数据结构和算法有比较全面的理解，能够熟练应用已知数据结构和算法解决常见问题，并给出时间和空间复杂度<br \/>4.有深入理解，能够灵活的根据问题进行数据结构和算法的变换，解决困难问题<br \/>5.深刻理解，算法领域的专家，例如楼天城同学",
		"常用问题": "二叉树、快排；<br \/>堆、栈<br \/>如何确定单向链是否存在环？<br \/>有一个数组，其中一个数的出现次数超过50%，如何找出？<br \/>数据库死锁的产生原因？（行锁、表锁）<br \/>如何建立索引，什么情况要加索引？<br \/>各联表查询的区别？（基本语法）<br \/>优化表结构和查询的思路（存储类型）",
		"单项最低标准": 2
	},
	"系统知识": {
		"考核点": "Linux系统/网络知识/操作系统/硬件等",
		"打分标准": "1.概念级<br \/>2.有部分理解，但不够系统<br \/>3.能够把整个系统串起来，用整体的观点看待<br \/>4.在3的基础上，对于一些核心问题理解深入，如linux内存分配方法，CPU调度，tcp/ip实现等等<br \/>5.系统专家，并能够根据实际情况进行核心等方面的修改和调优",
		"常用问题":"进程和线程的区别？分别使用的场景<br \/>Linux命令和shell编程<br \/>16位操作系统的最大内存空间<br \/>进程间的通信方式<br \/>什么是中断？有几种类型？如何产生<br \/>TCP和UDP的区别？TCP的三次握手？<br \/>什么是滑动窗口协议？<br \/>如何划分IPV4和IPV6网段<br \/>网络的稳定性（如何查丢包）",
		"单项最低标准": 1
	},
	"项目经验": {
		"考核点": "项目本身的复杂程度，和公司的相关性，面试者在项目里面的职责，软件工程相关意识和能力等等",
		"打分标准": "1.基本无项目经验，或者很零碎<br \/>2.项目比较小（是负责人），或者承担的职责很少<br \/>3.中等项目的核心人员（例如负责架构设计，核心程序编写等）或者大型项目的模块负责人，有一定的项目分解，设计能力<br \/>4.较大型项目的负责人，有全程把握需求、设计、编码、测试、发布的经验，有成功项目的例子<br \/>5.在4的基础上，能够总结出项目研发的方法论，或者在架构设计上有很多独到的地方，能够独立设计大型系统<br \/>P.S.这里的项目规模应该包括多个因素：项目的技术难度（重要），项目的规模（如代码行数，参加人员等等），项目和公司的相关度越大越好，可以适当加分。",
		"常用问题":'无',
		"单项最低标准": 1
	},
	"其他加分技能": {
		"考核点": "对于特定专业知识的考察，如人工智能、NLP、系统运维、硬件、内核、网络安全,客户端等方面",
		"打分标准": "1.对某一项有一些经验，但是理解较浅<br \/>2.对某一项有比较全面的理解，可以独立、正确完成大多相关的作业；或对多项特定专业领域有一些较浅经验<br \/>3.对多项特定专业领域有比较全面的理解，可以独立、正确完成大多相关的作业",
		"常用问题":'无',
		"单项最低标准": 0
	}
}

var feData = {
	"代码能力": {
		"考核点": "类C语言/脚本类/网络编程/多线程编程/数据库编程等",
		"打分标准": "1.仅懂皮毛，有一些概念<br \/>2.有一些编程经验，但是理解较浅<br \/>3.有比较全面的理解，可以独立、正确完成大多数编程作业<br \/>4.有深入理解，能够融会贯通，完成复杂的编程作业<br \/>5.领域专家级人才，例如对于语言发展，语言设计有深入探索，有设计新语言的能力<br \/>P.S.代码的风格可以作为一个加分项考虑",
		"常用问题": "C和C++的内存分布方式？如何回收？<br \/>模拟内存溢出（多种方式）<br \/>什么是MVC？分层的目的？具体应用场景？<br \/>分别用实例体现面向对象的特性？<br \/>如何进行垃圾回收？（C++、Java，什么会被认为是垃圾？）<br \/>Java中的泛型和反射**给其他人代码找错、现场改写代码、用好笔试题",
		"单项最低标准": 3
	},
	"数据结构和算法": {
		"考核点": "对常用算法、数据结构的掌握程度，包括算法的原理和应用",
		"打分标准": "1.皮毛，有一些概念<br \/>2.对一般的数据结构和算法能够理解和正确写出（如链表，字符串，排序等）<br \/>3.对数据结构和算法有比较全面的理解，能够熟练应用已知数据结构和算法解决常见问题，并给出时间和空间复杂度<br \/>4.有深入理解，能够灵活的根据问题进行数据结构和算法的变换，解决困难问题<br \/>5.深刻理解，算法领域的专家，例如楼天城同学",
		"常用问题": "二叉树、快排；<br \/>堆、栈<br \/>如何确定单向链是否存在环？<br \/>有一个数组，其中一个数的出现次数超过50%，如何找出？<br \/>数据库死锁的产生原因？（行锁、表锁）<br \/>如何建立索引，什么情况要加索引？<br \/>各联表查询的区别？（基本语法）<br \/>优化表结构和查询的思路（存储类型）",
		"单项最低标准": 2
	},
	"系统知识": {
		"考核点": "Linux系统/网络知识/操作系统/硬件等",
		"打分标准": "1.概念级<br \/>2.有部分理解，但不够系统<br \/>3.能够把整个系统串起来，用整体的观点看待<br \/>4.在3的基础上，对于一些核心问题理解深入，如linux内存分配方法，CPU调度，tcp/ip实现等等<br \/>5.系统专家，并能够根据实际情况进行核心等方面的修改和调优",
		"常用问题":"进程和线程的区别？分别使用的场景<br \/>Linux命令和shell编程<br \/>16位操作系统的最大内存空间<br \/>进程间的通信方式<br \/>什么是中断？有几种类型？如何产生<br \/>TCP和UDP的区别？TCP的三次握手？<br \/>什么是滑动窗口协议？<br \/>如何划分IPV4和IPV6网段<br \/>网络的稳定性（如何查丢包）",
		"单项最低标准": 1
	},
	"项目经验": {
		"考核点": "项目本身的复杂程度，和公司的相关性，面试者在项目里面的职责，软件工程相关意识和能力等等",
		"打分标准": "1.基本无项目经验，或者很零碎<br \/>2.项目比较小（是负责人），或者承担的职责很少<br \/>3.中等项目的核心人员（例如负责架构设计，核心程序编写等）或者大型项目的模块负责人，有一定的项目分解，设计能力<br \/>4.较大型项目的负责人，有全程把握需求、设计、编码、测试、发布的经验，有成功项目的例子<br \/>5.在4的基础上，能够总结出项目研发的方法论，或者在架构设计上有很多独到的地方，能够独立设计大型系统<br \/>P.S.这里的项目规模应该包括多个因素：项目的技术难度（重要），项目的规模（如代码行数，参加人员等等），项目和公司的相关度越大越好，可以适当加分。",
		"常用问题":'DOM&BOM分别是什么<br \/>盒模型是什么<br \/>简单列表布局<br \/>JS的基础 闭包 原型 继承 事件模型 动画实现',
		"单项最低标准": 1
	},
	"其他加分技能": {
		"考核点": "对于特定专业知识的考察，如人工智能、NLP、系统运维、硬件、内核、网络安全,客户端等方面",
		"打分标准": "1.对某一项有一些经验，但是理解较浅<br \/>2.对某一项有比较全面的理解，可以独立、正确完成大多相关的作业；或对多项特定专业领域有一些较浅经验<br \/>3.对多项特定专业领域有比较全面的理解，可以独立、正确完成大多相关的作业",
		"常用问题":'无',
		"单项最低标准": 0
	}
}

var qaData = {
	"代码能力": {
		"考核点": "类C语言/脚本类/网络编程/多线程编程/数据库编程等",
		"打分标准": "1.仅懂皮毛，有一些概念<br \/>2.有一些编程经验，但是理解较浅<br \/>3.有比较全面的理解，可以独立、正确完成大多数编程作业<br \/>4.有深入理解，能够融会贯通，完成复杂的编程作业<br \/>5.领域专家级人才，例如对于语言发展，语言设计有深入探索，有设计新语言的能力<br \/>P.S.代码的风格可以作为一个加分项考虑",
		"常用问题": "C和C++的内存分布方式？如何回收？<br \/>模拟内存溢出（多种方式）<br \/>什么是MVC？分层的目的？具体应用场景？<br \/>分别用实例体现面向对象的特性？<br \/>如何进行垃圾回收？（C++、Java，什么会被认为是垃圾？）<br \/>Java中的泛型和反射**给其他人代码找错、现场改写代码、用好笔试题",
		"单项最低标准": 3
	},
	"数据结构和算法": {
		"考核点": "对常用算法、数据结构的掌握程度，包括算法的原理和应用",
		"打分标准": "1.皮毛，有一些概念<br \/>2.对一般的数据结构和算法能够理解和正确写出（如链表，字符串，排序等）<br \/>3.对数据结构和算法有比较全面的理解，能够熟练应用已知数据结构和算法解决常见问题，并给出时间和空间复杂度<br \/>4.有深入理解，能够灵活的根据问题进行数据结构和算法的变换，解决困难问题<br \/>5.深刻理解，算法领域的专家，例如楼天城同学",
		"常用问题": "二叉树、快排；<br \/>堆、栈<br \/>如何确定单向链是否存在环？<br \/>有一个数组，其中一个数的出现次数超过50%，如何找出？<br \/>数据库死锁的产生原因？（行锁、表锁）<br \/>如何建立索引，什么情况要加索引？<br \/>各联表查询的区别？（基本语法）<br \/>优化表结构和查询的思路（存储类型）",
		"单项最低标准": 2
	},
	"系统知识": {
		"考核点": "Linux系统/网络知识/操作系统/硬件等",
		"打分标准": "1.概念级<br \/>2.有部分理解，但不够系统<br \/>3.能够把整个系统串起来，用整体的观点看待<br \/>4.在3的基础上，对于一些核心问题理解深入，如linux内存分配方法，CPU调度，tcp/ip实现等等<br \/>5.系统专家，并能够根据实际情况进行核心等方面的修改和调优",
		"常用问题":"进程和线程的区别？分别使用的场景<br \/>Linux命令和shell编程<br \/>16位操作系统的最大内存空间<br \/>进程间的通信方式<br \/>什么是中断？有几种类型？如何产生<br \/>TCP和UDP的区别？TCP的三次握手？<br \/>什么是滑动窗口协议？<br \/>如何划分IPV4和IPV6网段<br \/>网络的稳定性（如何查丢包）",
		"单项最低标准": 1
	},
	"项目经验": {
		"考核点": "项目本身的复杂程度，和公司的相关性，面试者在项目里面的职责，软件工程相关意识和能力等等",
		"打分标准": "1.基本无项目经验，或者很零碎<br \/>2.项目比较小（是负责人），或者承担的职责很少<br \/>3.中等项目的核心人员（例如负责架构设计，核心程序编写等）或者大型项目的模块负责人，有一定的项目分解，设计能力<br \/>4.较大型项目的负责人，有全程把握需求、设计、编码、测试、发布的经验，有成功项目的例子<br \/>5.在4的基础上，能够总结出项目研发的方法论，或者在架构设计上有很多独到的地方，能够独立设计大型系统<br \/>P.S.这里的项目规模应该包括多个因素：项目的技术难度（重要），项目的规模（如代码行数，参加人员等等），项目和公司的相关度越大越好，可以适当加分。",
		"常用问题":'如何把需求转化为测试点？（门的测试）<br \/>Google搜索框测试（有效、无效），搜不出结果的原因？<br \/>写出两部电梯调度逻辑<br \/>把笔试编程题转为流程图（找个相对复杂的）<br \/>ATM机取款（画流程及风险）<br \/>其他简历或面试问到的项目',
		"单项最低标准": 1
	},
	"其他加分技能": {
		"考核点": "对于特定专业知识的考察，如人工智能、NLP、系统运维、硬件、内核、网络安全,客户端等方面",
		"打分标准": "1.对某一项有一些经验，但是理解较浅<br \/>2.对某一项有比较全面的理解，可以独立、正确完成大多相关的作业；或对多项特定专业领域有一些较浅经验<br \/>3.对多项特定专业领域有比较全面的理解，可以独立、正确完成大多相关的作业",
		"常用问题":'',
		"单项最低标准": 0
	}
}


