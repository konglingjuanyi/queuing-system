<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:beans="http://www.springframework.org/schema/beans"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:p="http://www.springframework.org/schema/p"
	xmlns:rabbit="http://www.springframework.org/schema/rabbit"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:cache="http://www.springframework.org/schema/cache"
	xmlns:task="http://www.springframework.org/schema/task"
	xsi:schemaLocation="
	http://www.springframework.org/schema/rabbit
	http://www.springframework.org/schema/rabbit/spring-rabbit-1.3.xsd
	http://www.springframework.org/schema/tx 
	http://www.springframework.org/schema/tx/spring-tx-3.1.xsd
	http://www.springframework.org/schema/beans 
	http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
	http://www.springframework.org/schema/context 
	http://www.springframework.org/schema/context/spring-context-3.1.xsd
	http://www.springframework.org/schema/aop
	http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
	http://www.springframework.org/schema/cache
	http://www.springframework.org/schema/cache/spring-cache.xsd
	http://www.springframework.org/schema/task http://www.springframework.org/schema/task/spring-task-3.0.xsd
	">

	<context:property-placeholder
		ignore-unresolvable="true" local-override="true"
		location="classpath*:/oaengine.properties,classpath*:/mq.properties" />

	<aop:aspectj-autoproxy/>
	
	<cache:annotation-driven/>
	
	<context:component-scan base-package="com.qunar.ops.oaengine" />
	
	<bean id="cacheManager" class="org.springframework.cache.support.SimpleCacheManager">
	  <property name="caches">
	    <list>
	      <bean name="oaCache" class="com.qunar.ops.oaengine.cache.GuavaCacheAdapter">
	      </bean>
	    </list>
	  </property>
	</bean>

	<!-- 引擎内部提供的UUID生成器，依赖fastxml的java-uuid-generator模块 -->
	<bean id="uuidGenerator"
		class="org.activiti.engine.impl.persistence.StrongUuidGenerator" />

	<bean id="dataSourceWrite" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${dbcp.maxActive}" />
		<property name="maxIdle" value="${dbcp.maxIdle}" />
		<property name="defaultAutoCommit" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
		<property name="minEvictableIdleTimeMillis" value="3600000" />
	</bean>
	
	<bean id="dataSourceRead" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${jdbc.driver}" />
		<property name="url" value="${jdbc.url}" />
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="maxActive" value="${dbcp.maxActive}" />
		<property name="maxIdle" value="${dbcp.maxIdle}" />
		<property name="defaultAutoCommit" value="true" />
		<property name="timeBetweenEvictionRunsMillis" value="3600000" />
		<property name="minEvictableIdleTimeMillis" value="3600000" />
	</bean>
	
	<bean id="dataSource" class="com.qunar.ops.oaengine.datasource.MultipleDataSource">
        <property name="defaultTargetDataSource" ref="dataSourceWrite"/>
        <property name="targetDataSources">
            <map>
                <entry key="dataSourceWrite" value-ref="dataSourceWrite"/>
                <entry key="dataSourceRead" value-ref="dataSourceRead"/>
            </map>
        </property>
	</bean>

	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>
	
	<bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"> 
		<property name="dataSource" ref="dataSource" /> 
		<property name="mapperLocations" value="classpath*:com/qunar/ops/oaengine/mapping/*.xml" />
	</bean> 
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer"> 
		<property name="basePackage" value="com.qunar.ops.oaengine.dao" /> 
		<property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" /> 
	</bean>

	<bean id="processEngineConfiguration" class="org.activiti.spring.SpringProcessEngineConfiguration">
		<property name="dataSource" ref="dataSource" />
		<property name="transactionManager" ref="transactionManager" />
		<property name="databaseSchemaUpdate" value="true" />
		<property name="jobExecutorActivate" value="false" />
		<property name="history" value="full" />
		<!--<property name="processDefinitionCacheLimit" value="10" /> -->
		<!--<property name="idGenerator" ref="uuidGenerator" /> -->
		<property name="activityFontName" value="宋体" />
		<property name="labelFontName" value="宋体" />
		<!-- 缓存支持 <property name="processDefinitionCache"> <bean class="me.kafeitu.demo.activiti.util.cache.DistributedCache" 
			/> </property> -->
		<!-- 自动部署 <property name="deploymentResources"> <list> <value>classpath*:/deployments/*</value> 
			</list> </property> -->
	</bean>

	<bean id="processEngine" class="org.activiti.spring.ProcessEngineFactoryBean">
		<property name="processEngineConfiguration" ref="processEngineConfiguration" />
	</bean>
	<bean id="repositoryService" factory-bean="processEngine"
		factory-method="getRepositoryService" />
	<bean id="runtimeService" factory-bean="processEngine"
		factory-method="getRuntimeService" />
	<bean id="taskService" factory-bean="processEngine"
		factory-method="getTaskService" />
	<bean id="historyService" factory-bean="processEngine"
		factory-method="getHistoryService" />
	<bean id="managementService" factory-bean="processEngine"
		factory-method="getManagementService" />
	<bean id="identityService" factory-bean="processEngine" factory-method="getIdentityService"/>
	<bean id="formService" factory-bean="processEngine" factory-method="getFormService" />
	
	<bean id="notificationListener" class="com.qunar.ops.oaengine.listener.NotificationListener"/>
	<bean id="selectListener" class="com.qunar.ops.oaengine.listener.SelectListener"/>
	

	<!-- 注解方式配置事物 -->
	<tx:annotation-driven transaction-manager="transactionManager" />
	<!-- 开启这个配置，spring才能识别@Scheduled注解   -->  
    <task:annotation-driven scheduler="qbScheduler" mode="proxy"/>  
    <task:scheduler id="qbScheduler" pool-size="10"/>  
	<!-- Redis
	<bean id="jedisConnectionFactory" class="org.springframework.data.redis.connection.jedis.JedisConnectionFactory" p:host-name="${redis.host}" p:port="${redis.port}"/>
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate" p:connection-factory-ref="jedisConnectionFactory">
		<property name="keySerializer">
	         <bean class="org.springframework.data.redis.serializer.StringRedisSerializer"></bean>
	    </property>
	</bean>  -->

	<!-- Rabbit MQ 
    <bean id="jsonMessageConverter"  class="com.qunar.ops.oaengine.mq.FastJsonMessageConverter"></bean>
    <rabbit:connection-factory id="connectionFactory" addresses="${mqHost}" username="${mqUsername}" password="${mqPassword}"/>
    <rabbit:template id="amqpTemplate" connection-factory="connectionFactory"/>
    <rabbit:admin connection-factory="connectionFactory"/>
    <rabbit:queue name="oa.sendmail"/>
    <rabbit:listener-container connection-factory="connectionFactory">
    	<rabbit:listener queues="oa.sendmail" ref="mailSender" method="senderMail"/>
	</rabbit:listener-container>
	<bean id="mailSender" class=" com.qunar.ops.oaengine.service.MailSenderService"/>
	-->
</beans>
